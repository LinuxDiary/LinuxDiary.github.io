(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{215:function(e,s,t){"use strict";t.r(s);var a=t(6),r=Object(a.a)({},(function(){var e=this,s=e._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"文件描述符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文件描述符"}},[e._v("#")]),e._v(" 文件描述符")]),e._v(" "),s("h2",{attrs:{id:"概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[e._v("#")]),e._v(" 概述")]),e._v(" "),s("p",[e._v("对于内核而言，所有打开的文件都是通过文件描述符引用的，文件描述符在形式上是一个非负整数。实际上，它是一个索引值，指向内核为每一个进程所维护的该进程打开文件的记录表。当程序打开一个现有文件或者创建一个新文件时，内核向进程返回一个文件描述符。每个Unix进程（除了可能的守护进程）应均有三个标准的 "),s("code",[e._v("POSIX")]),e._v(" 文件描述符，对应于三个标准流："),s("code",[e._v("0（stdin）、1（stdout）、2（stderr）")]),e._v("，因此每个进程的文件描述符都是从3开始。")]),e._v(" "),s("h2",{attrs:{id:"打开和分配的fd数量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#打开和分配的fd数量"}},[e._v("#")]),e._v(" 打开和分配的fd数量")]),e._v(" "),s("h3",{attrs:{id:"系统级"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#系统级"}},[e._v("#")]),e._v(" 系统级")]),e._v(" "),s("p",[e._v("主要涉及三个文件 "),s("code",[e._v("file-max、file-nr、nr_open")]),e._v(" ，位于 "),s("code",[e._v("/proc/sys/fs")]),e._v(" ,是动态的，以下是官方对三个文件的解释。 "),s("code",[e._v("file-max")]),e._v(" 记录的是系统总共可打开的文件描述符数，是系统启动时根据硬件配置赋予的建议值，且可在 "),s("code",[e._v("sysctl.conf")]),e._v(" 中进行定义。 "),s("code",[e._v("file-nr")]),e._v(" 有三个值，第一个代表系统中已打开的文件描述符数（系统中总的 "),s("code",[e._v("fd")]),e._v(" 打开数，包含进程的 "),s("code",[e._v("fd")]),e._v(" 数），第二个值总是 "),s("code",[e._v("0")]),e._v(" ，第三个值同 "),s("code",[e._v("file-max")]),e._v(" 。 "),s("code",[e._v("nr_open")]),e._v(" 代表一个进程可分配的最大 "),s("code",[e._v("fd")]),e._v(" 数，一般为 "),s("code",[e._v("1024*1024=1048576")]),e._v(" ，通常够用，无需修改。")]),e._v(" "),s("blockquote",[s("p",[e._v("==============================================================")]),e._v(" "),s("p",[e._v("file-max & file-nr:")]),e._v(" "),s("p",[e._v("The value in file-max denotes the maximum number of file- handles that\nthe Linux kernel will allocate. When you get lots of error messages\nabout running out of file handles, you might want to increase this\nlimit.")]),e._v(" "),s("p",[e._v("Historically,the kernel was able to allocate file handles dynamically,\nbut not to free them again. The three values in file-nr denote the\nnumber of allocated file handles, the number of allocated but unused\nfile handles, and the maximum number of file handles. Linux 2.6 always\nreports 0 as the number of free file handles -- this is not an error,\nit just means that the number of allocated file handles exactly\nmatches the number of used file handles.")]),e._v(" "),s("p",[e._v('Attempts to allocate more file descriptors than file-max are reported\nwith printk, look for "VFS: file-max limit reached".')]),e._v(" "),s("p",[e._v("nr_open:\nThis denotes the maximum number of file-handles a process can\nallocate. Default value is 1024*1024 (1048576) which should be enough\nfor most machines. Actual limit depends on RLIMIT_NOFILE resource\nlimit.")]),e._v(" "),s("p",[e._v("==============================================================")])]),e._v(" "),s("h3",{attrs:{id:"进程级"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#进程级"}},[e._v("#")]),e._v(" 进程级")]),e._v(" "),s("p",[e._v("查看进程级 "),s("code",[e._v("fd")]),e._v(" 数可通过 "),s("code",[e._v("lsof")]),e._v(" 命令，但由于 "),s("code",[e._v("lsof")]),e._v(" 命令包含了并非以 "),s("code",[e._v("fd")]),e._v(" 形式打开的文件，如 "),s("code",[e._v("mem")]),e._v(" "),s("code",[e._v("mmap")]),e._v(" 等，直接使用 "),s("code",[e._v("lsof")]),e._v(" 获取的 "),s("code",[e._v("fd")]),e._v(" 数将远大于真实的 "),s("code",[e._v("fd")]),e._v(" 数，因为有很多文件可能会被多进程和多线程打开多次，被重复打开的文件很可能没有 "),s("code",[e._v("fd")]),e._v(" ，而 "),s("code",[e._v("lsof")]),e._v(" 会将这些全部列出来，因此用如下办法获取较为真实的进程级 "),s("code",[e._v("fd")]),e._v(" 数量")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("find")]),e._v(" /proc "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-print")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("grep")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-P")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"/proc/\\d+/fd/"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("wc")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-l")]),e._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("lsof")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-n")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("awk")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'{print $4}'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("egrep")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'^[0-9]+'")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("wc")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-l")]),e._v("\n")])])]),s("p",[e._v("查看每个进程打开的 "),s("code",[e._v("fd")]),e._v(" 数")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("ls")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-l")]),e._v(" /proc/"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("pid"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("/fd "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("wc")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-l")]),e._v("\n")])])]),s("h3",{attrs:{id:"fdsize"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fdsize"}},[e._v("#")]),e._v(" FDSize")]),e._v(" "),s("p",[s("code",[e._v("FDSize")]),e._v(" 是系统给每个进程分配的fd数，如果进程打开的fd超过64，64位系统以64为基数动态递增，32位系统同理。 "),s("code",[e._v("FDSize")]),e._v(" 通过 "),s("code",[e._v("cat /proc/<pid>/status")]),e._v(" 获得，受 "),s("code",[e._v("/proc/<pid>/limits")]),e._v(" 中的 "),s("code",[e._v("open files")]),e._v(" 限制。")]),e._v(" "),s("h2",{attrs:{id:"调整进程的fd数量上限"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#调整进程的fd数量上限"}},[e._v("#")]),e._v(" 调整进程的fd数量上限")]),e._v(" "),s("p",[e._v("如未指定，系统默认情况下非 "),s("code",[e._v("root")]),e._v(" 用户的 "),s("code",[e._v("open files")]),e._v(" 的 "),s("code",[e._v("soft")]),e._v(" 上限是 "),s("code",[e._v("1024")]),e._v(" ， "),s("code",[e._v("max user processes")]),e._v(" 的 "),s("code",[e._v("soft")]),e._v(" 上限是 "),s("code",[e._v("4096")]),e._v(" （ "),s("code",[e._v("CentOS7")]),e._v(" 在 "),s("code",[e._v("/etc/security/limits.d/20-nproc.conf")]),e._v(" 中指定）。系统的 "),s("code",[e._v("services")]),e._v(" 不受 "),s("code",[e._v("limits.conf")]),e._v(" 的限制，这个文件仅仅限制通过 "),s("code",[e._v("pam")]),e._v(" 认证登陆的系统用户。这是 "),s("code",[e._v("CentOS7")]),e._v(" 与 "),s("code",[e._v("CentOS6")]),e._v(" 及之前的版本所不同的地方， "),s("code",[e._v("CentOS6")]),e._v(" 可通过直接修改 "),s("code",[e._v("limits.conf")]),e._v(" 开控制 "),s("code",[e._v("limits")]),e._v(" 值，而基于 "),s("code",[e._v("systemd")]),e._v(" 的 "),s("code",[e._v("CentOS7")]),e._v(" 不行。以下是 "),s("code",[e._v("limits.conf")]),e._v(" 的描述")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# /etc/security/limits.conf")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#This file sets the resource limits for the users logged in via PAM.")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#It does not affect resource limits of the system services.")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n")])])]),s("p",[e._v("基于 "),s("code",[e._v("systemd")]),e._v(" 的 "),s("code",[e._v("services")]),e._v(" 的 "),s("code",[e._v("open files")]),e._v(" 上限由 "),s("code",[e._v("/etc/systemd/system.conf")]),e._v(" 和服务本身的 "),s("code",[e._v(".service")]),e._v(" 文件配置，且优先级 "),s("code",[e._v(".service > system.conf")]),e._v(" 。其中 "),s("code",[e._v("system.conf")]),e._v(" 配置的是默认的 "),s("code",[e._v("limits")]),e._v(" 值，修改后需重启系统。")]),e._v(" "),s("p",[s("code",[e._v(".service")]),e._v(" 文件中以 "),s("code",[e._v("LimitNOFILE =")]),e._v(" 和 "),s("code",[e._v("LimitNPROC =")]),e._v(" 来指定该服务的 "),s("code",[e._v("open files")]),e._v(" 和 "),s("code",[e._v("processes")]),e._v(" 的上限，修改后重启服务可通过 "),s("code",[e._v("/proc/<pid>/limits")]),e._v(" 查看生效。")]),e._v(" "),s("p",[s("code",[e._v("system.conf")]),e._v(" 文件中以 "),s("code",[e._v("DefaultLimitNOFILE=")]),e._v(" 和 "),s("code",[e._v("DefaultLimitNPROC=")]),e._v(" 来设置默认的 "),s("code",[e._v("open files和processes")]),e._v(" 的 "),s("code",[e._v("limits")]),e._v(" 值。设置后，如果某系统服务未指定 "),s("code",[e._v("LimitNOFILE =")]),e._v(" 和 "),s("code",[e._v("LimitNPROC =")]),e._v("  ，将以 "),s("code",[e._v("DefaultLimitNOFILE=")]),e._v(" 和 "),s("code",[e._v("DefaultLimitNPROC=")]),e._v(" 的值作为默认上限，可通过 "),s("code",[e._v("/proc/<pid>/limits")]),e._v(" 查看生效。")]),e._v(" "),s("p",[s("strong",[e._v("以mysql服务和用户为例")])]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("cat")]),e._v(" /etc/passwd "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("grep")]),e._v(" mysql\nmysql:x:27:27:MariaDB Server:/var/lib/mysql:/sbin/nologin\n")])])]),s("p",[s("code",[e._v("mysql")]),e._v(" 为 "),s("code",[e._v("MySQL")]),e._v(" 服务创建的不可登陆的系统用户，修改其 "),s("code",[e._v("limits")]),e._v(" 为极低值")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("vi")]),e._v(" /etc/security/limits.d/20-nproc.conf\nmysql - nofile "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v("\nroot soft nproc unlimited\n")])])]),s("p",[e._v("而之前在 "),s("code",[e._v("mysqld.service")]),e._v(" 和 "),s("code",[e._v("system.conf")]),e._v(" 中指定的 "),s("code",[e._v("LimitNOFILE")]),e._v(" 值不变")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("vi")]),e._v(" /usr/lib/systemd/system/mysqld.service\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Sets open_files_limit")]),e._v("\nLimitNOFILE "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("10240")]),e._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("vi")]),e._v(" /etc/systemd/system.conf\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("DefaultLimitNOFILE")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("20480")]),e._v("\n")])])]),s("p",[e._v("重启 "),s("code",[e._v("mysqld.service")])]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" systemctl daemon-reload\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" systemctl restart mysqld\n")])])]),s("p",[e._v("获取 "),s("code",[e._v("mysqld")]),e._v(" 新的 "),s("code",[e._v("pid")])]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("$ pidof mysqld\n"),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("1040")]),e._v("\n")])])]),s("p",[e._v("查看 "),s("code",[e._v("mysqld")]),e._v(" 的 "),s("code",[e._v("limits")]),e._v(" 对比另一进程的 "),s("code",[e._v("limits")])]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("cat")]),e._v(" /proc/1040/limits\nMax "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("open")]),e._v(" files "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("10240")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("10240")]),e._v(" files\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("cat")]),e._v(" /proc/1198/limits\nMax "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("open")]),e._v(" files "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("20480")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("20480")]),e._v(" files\n")])])]),s("p",[e._v("由此看出， "),s("code",[e._v("limits.conf")]),e._v(" 和 "),s("code",[e._v("limits.d/*.conf")]),e._v(" 只能影响登陆 "),s("code",[e._v("shell")]),e._v(" 的用户的 "),s("code",[e._v("limits")]),e._v(" ，而不能影响基于 "),s("code",[e._v("systemd")]),e._v(" 的系统服务的 "),s("code",[e._v("limits")]),e._v(" ，且 "),s("code",[e._v(".service")]),e._v(" 的优先级大于 "),s("code",[e._v("system.conf")])]),e._v(" "),s("h2",{attrs:{id:"参考链接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考链接"}},[e._v("#")]),e._v(" 参考链接")]),e._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"http://www.cnblogs.com/chris-cp/p/6667753.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://www.cnblogs.com/chris-cp/p/6667753.html"),s("OutboundLink")],1)]),e._v(" "),s("li",[s("a",{attrs:{href:"http://jameswxx.iteye.com/blog/2096461",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://jameswxx.iteye.com/blog/2096461"),s("OutboundLink")],1)]),e._v(" "),s("li",[s("a",{attrs:{href:"https://www.jianshu.com/p/407c2baef92e",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.jianshu.com/p/407c2baef92e"),s("OutboundLink")],1)]),e._v(" "),s("li",[s("a",{attrs:{href:"http://www.itread01.com/articles/1490367461.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://www.itread01.com/articles/1490367461.html"),s("OutboundLink")],1)]),e._v(" "),s("li",[s("a",{attrs:{href:"https://www.netadmintools.com/art295.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.netadmintools.com/art295.html"),s("OutboundLink")],1)]),e._v(" "),s("li",[s("a",{attrs:{href:"http://www.leexide.com/%E8%BF%90%E7%BB%B4%E5%9F%BA%E7%A1%80/linux/474.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://www.leexide.com/%E8%BF%90%E7%BB%B4%E5%9F%BA%E7%A1%80/linux/474.html"),s("OutboundLink")],1)]),e._v(" "),s("li",[s("a",{attrs:{href:"https://www.kernel.org/doc/Documentation/sysctl/fs.txt",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.kernel.org/doc/Documentation/sysctl/fs.txt"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=r.exports}}]);